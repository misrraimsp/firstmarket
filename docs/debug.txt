


<!-- <%=showCategories((TreeNode<Category>)application.getAttribute("categoryCatalog"))%>
			-->
			
			<!-- 
				<a href="/firstmarket/fc/admin/categories/editCategory?id=${child.data.category_id}"><c:out value="${child.data.name}"/></a>
				-->




/**DEBUG
	static {
		TreeNode<Category> rootCategory = db.getCategories();
		
		System.out.println("***************0");
		System.out.println("CatKey: "+ rootCategory.getData().getCategory_id() + " - CatName: " + rootCategory.getData().getName());
		
		System.out.println("***************1");
		for (TreeNode<Category> node : rootCategory) {
			String indent = createIndent(node.getLevel());
			System.out.println(indent + node.getData().getCategory_id() + "-" + node.getData().getName());
		}
		
		System.out.println("***************2");
		HashMap<String, String> cats = DAOjdbc.getCategoriesMap();
        for (Map.Entry me : cats.entrySet()) {
          System.out.println("CatKey: "+ me.getKey() + " - CatName: " + me.getValue());
        }
		
        System.out.println("***************3");
        List<CatPath> paths = DAOjdbc.getFirstOrderRelations();
		for (CatPath cp : paths) {
			System.out.println("Ancestor: " + cp.getAncestor() + " - Descendant: " + cp.getDescendant() + " - Path_length: " + cp.getPath_length());
		}
		
		System.out.println("***************4");
		List<TreeNode<Category>> children1 = rootCategory.children;
		if (children1.size() == 0) System.out.println("root sin hijos (test4)");
		for (TreeNode<Category> c : children1) {
			System.out.println("CatKey: "+ c.getData().getCategory_id() + " - CatName: " + c.getData().getName());
		}
		
		System.out.println("***************5");
		List<Category> children2 = DAOjdbc.getChildren(rootCategory.getData());
		if (children2.size() == 0) System.out.println("root sin hijos (test5)");
		for (Category c : children2) {
			System.out.println("CatKey: "+ c.getCategory_id() + " - CatName: " + c.getName());
		}
		
		System.out.println("***************6");
		List<Category> children3 = DAOjdbc.getChildren(new Category("1", "fm"));
		if (children3.size() == 0) System.out.println("root sin hijos (test6)");
		for (Category c : children3) {
			System.out.println("CatKey: "+ c.getCategory_id() + " - CatName: " + c.getName());
		}
		
		
		System.out.println("***************end");
	}

	private static String createIndent(int depth) {
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < depth; i++) {
			sb.append(' ');
		}
		return sb.toString();
	}
//////////////////////////	/*/











/**
		//StringBuffer url = request.getRequestURL();
		//String servpath = request.getServletPath();
		//String pathinfo = request.getPathInfo();
		//String pathtranslated = request.getPathTranslated();
		//String querystring = request.getQueryString();
		//String contxtpath = request.getContextPath();
		
		//System.out.println("requestURL: " + url);
		//System.out.println("requestSERVPATH: " + servpath);
		//System.out.println("requestPATHINFO: " + pathinfo);
		//System.out.println("requestPATHTRANSL: " + pathtranslated); 
		*/














